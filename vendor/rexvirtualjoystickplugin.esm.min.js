/* MIT License

Copyright (c) 2018 Rex 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. 

Source: https://github.com/rexrainbow/phaser3-rex-notes/blob/master/dist/rexvirtualjoystickplugin.js */
import{Events as S,Geom as Y,Input as D,Math as A,Plugins as T,Utils as U}from"phaser";var w=D.Keyboard.Key,F=D.Keyboard.KeyCodes,X=["up","down","left","right"],R={timeStamp:0,keyCode:0,altKey:!1,ctrlKey:!1,shiftKey:!1,metaKey:!1,location:0},M={"up&down":0,"left&right":1,"4dir":2,"8dir":3},N={},G={},_=U.Objects.GetValue,h=A.Distance.Between,x=A.Angle.Between,W=U.Objects.GetValue,V=Y.Circle,j=Y.Circle.Contains,Q=U.Objects.GetValue,$={setEventEmitter(q,z){if(z===void 0)z=S.EventEmitter;return this._privateEE=q===!0||q===void 0,this._eventEmitter=this._privateEE?new z:q,this},destroyEventEmitter(){if(this._eventEmitter&&this._privateEE)this._eventEmitter.shutdown();return this},getEventEmitter(){return this._eventEmitter},on(){if(this._eventEmitter)this._eventEmitter.on.apply(this._eventEmitter,arguments);return this},once(){if(this._eventEmitter)this._eventEmitter.once.apply(this._eventEmitter,arguments);return this},off(){if(this._eventEmitter)this._eventEmitter.off.apply(this._eventEmitter,arguments);return this},emit(q){if(this._eventEmitter&&q)this._eventEmitter.emit.apply(this._eventEmitter,arguments);return this},addListener(){if(this._eventEmitter)this._eventEmitter.addListener.apply(this._eventEmitter,arguments);return this},removeListener(){if(this._eventEmitter)this._eventEmitter.removeListener.apply(this._eventEmitter,arguments);return this},removeAllListeners(){if(this._eventEmitter)this._eventEmitter.removeAllListeners.apply(this._eventEmitter,arguments);return this},listenerCount(){if(this._eventEmitter)return this._eventEmitter.listenerCount.apply(this._eventEmitter,arguments);return 0},listeners(){if(this._eventEmitter)return this._eventEmitter.listeners.apply(this._eventEmitter,arguments);return[]},eventNames(){if(this._eventEmitter)return this._eventEmitter.eventNames.apply(this._eventEmitter,arguments);return[]}};class K{constructor(q){this.scene=q,this.keys={},this.cursorKeys={},this.noKeyDown=!0;for(let z=0,B=X.length;z<B;z++){const H=X[z];this.addKey(H),this.cursorKeys[H]=this.keys[H]}}shutdown(q){this.scene=void 0;for(const z in this.keys)this.keys[z].destroy();this.keys=void 0,this.cursorKeys=void 0}destroy(q){this.shutdown(q)}createCursorKeys(){return this.cursorKeys}setKeyState(q,z){const B=this.keys[q];if(!B.enabled)return this;if(z)this.noKeyDown=!1;if(B.isDown!==z)if(R.timeStamp=Date.now(),R.keyCode=B.keyCode,z)B.onDown(R);else B.onUp(R);return this}clearAllKeysState(){this.noKeyDown=!0;for(const q in this.keys)this.setKeyState(q,!1);return this}getKeyState(q){return this.keys[q]}get upKeyDown(){return this.keys.up.isDown}get downKeyDown(){return this.keys.down.isDown}get leftKeyDown(){return this.keys.left.isDown}get rightKeyDown(){return this.keys.right.isDown}get anyKeyDown(){return!this.noKeyDown}addKey(q,z){if(z===void 0)z=q;if(typeof z==="string"){if(z=z.toUpperCase(),F.hasOwnProperty(z))z=F[z]}return this.keys[q]=new w(this.scene,z),this}addKeys(q){for(let z=0,B=q.length;z<B;z++)this.addKey(q[z]);return this}}class I extends K{constructor(q,z){super(q);this.resetFromJSON(z)}resetFromJSON(q){if(this.start==null)this.start={x:0,y:0};if(this.end==null)this.end={x:0,y:0};this._enable=void 0,this.setEnable(_(q,"enable",!0)),this.setMode(_(q,"dir","8dir")),this.setDistanceThreshold(_(q,"forceMin",16));const z=_(q,"start.x",null),B=_(q,"start.y",null),H=_(q,"end.x",null),L=_(q,"end.y",null);return this.setVector(z,B,H,L),this}toJSON(){return{enable:this.enable,dir:this.dirMode,forceMin:this.forceMin,start:{x:this.start.x,y:this.start.y},end:{x:this.end.x,y:this.end.y}}}setMode(q){if(typeof q==="string")q=M[q];return this.dirMode=q,this}get enable(){return this._enable}set enable(q){if(this._enable===q)return;if(!q)this.clearVector();this._enable=q}setEnable(q){if(q===void 0)q=!0;return this.enable=q,this}toggleEnable(){return this.setEnable(!this.enable),this}setDistanceThreshold(q){if(q<0)q=0;return this.forceMin=q,this}clearVector(){return this.start.x=0,this.start.y=0,this.end.x=0,this.end.y=0,this.clearAllKeysState(),this}setVector(q,z,B,H){if(!this.enable)return this;if(q===null)return this.clearVector(),this;if(B===void 0)B=q,q=0,H=z,z=0;if(this.start.x=q,this.start.y=z,this.end.x=B,this.end.y=H,this.forceMin>0&&this.force<this.forceMin)return this.clearVector(),this;this.noKeyDown=!0;const L=O(this.angle,this.dirMode,!0);for(const Z in L)this.setKeyState(Z,L[Z]);return this}get forceX(){return this.end.x-this.start.x}get forceY(){return this.end.y-this.start.y}get force(){return h(this.start.x,this.start.y,this.end.x,this.end.y)}get rotation(){return x(this.start.x,this.start.y,this.end.x,this.end.y)}get angle(){return A.RadToDeg(this.rotation)}get octant(){let q=0;if(this.rightKeyDown)q=this.downKeyDown?45:0;else if(this.downKeyDown)q=this.leftKeyDown?135:90;else if(this.leftKeyDown)q=this.upKeyDown?225:180;else if(this.upKeyDown)q=this.rightKeyDown?315:270;return q}}class J extends I{constructor(q,z){const B=q.scene;super(B,z);const H=W(z,"eventEmitter",void 0),L=W(z,"EventEmitterClass",void 0);this.setEventEmitter(H,L),this.scene=B,this.mainCamera=B.sys.cameras.main,this.pointer=void 0,this.gameObject=q,this.radius=W(z,"radius",100),q.setInteractive(new V(q.displayOriginX,q.displayOriginY,this.radius),j),this.boot()}resetFromJSON(q){return super.resetFromJSON(q),this.pointer=void 0,this}toJSON(){const q=super.toJSON();return q.radius=this.radius,q}boot(){this.gameObject.on("pointerdown",this.onKeyDownStart,this),this.gameObject.on("pointerover",this.onKeyDownStart,this),this.scene.input.on("pointermove",this.onKeyDown,this),this.scene.input.on("pointerup",this.onKeyUp,this),this.gameObject.once("destroy",this.onParentDestroy,this)}shutdown(q){if(!this.scene)return;this.scene.input.off("pointermove",this.onKeyDown,this),this.scene.input.off("pointerup",this.onKeyUp,this),this.destroyEventEmitter(),this.scene=void 0,this.mainCamera=void 0,this.pointer=void 0,this.gameObject=void 0,super.shutdown()}get enable(){return this._enable}set enable(q){if(this._enable===q)return;if(!q)this.pointer=void 0;super.enable=q}destroy(q){this.shutdown(q)}onParentDestroy(q,z){this.destroy(z)}onKeyDownStart(q){if(!q.isDown||this.pointer!==void 0)return;this.pointer=q,this.onKeyDown(q),this.emit("pointerdown",q)}onKeyDown(q){if(this.pointer!==q)return;const z=b(q,this.mainCamera,!0);if(!z)return;const B=q.camera,H=this.gameObject,L=H.x-B.scrollX*(H.scrollFactorX-1),Z=H.y-B.scrollY*(H.scrollFactorY-1);this.setVector(L,Z,z.x,z.y),this.end.x=z.x,this.end.y=z.y,this.emit("update")}onKeyUp(q){if(this.pointer!==q)return;this.pointer=void 0,this.clearVector(),this.emit("update"),this.emit("pointerup",q)}forceUpdate(){const q=this.pointer;if(!q||!q.isDown)return this;return this.onKeyDown(q),this}}Object.assign(J.prototype,$);class P{constructor(q,z){if(z===void 0)z={};const B=Q(z,"eventEmitter",void 0),H=Q(z,"EventEmitterClass",void 0);this.setEventEmitter(B,H),z.eventEmitter=this.getEventEmitter(),this.scene=q,this.base=void 0,this.thumb=void 0,this.touchCursor=void 0,this.setRadius(Q(z,"radius",100)),this.addBase(Q(z,"base",void 0),z),this.addThumb(Q(z,"thumb",void 0));const L=Q(z,"x",0),Z=Q(z,"y",0);if(this.base.setPosition(L,Z),this.thumb.setPosition(L,Z),Q(z,"fixed",!0))this.setScrollFactor(0);this.boot()}destroy(){this.destroyEventEmitter(),this.base.destroy(),this.thumb.destroy(),this.scene=void 0,this.base=void 0,this.thumb=void 0,this.touchCursor=void 0}createCursorKeys(){return this.touchCursor.createCursorKeys()}get forceX(){return this.touchCursor.forceX}get forceY(){return this.touchCursor.forceY}get force(){return this.touchCursor.force}get rotation(){return this.touchCursor.rotation}get angle(){return this.touchCursor.angle}get up(){return this.touchCursor.upKeyDown}get down(){return this.touchCursor.downKeyDown}get left(){return this.touchCursor.leftKeyDown}get right(){return this.touchCursor.rightKeyDown}get noKey(){return this.touchCursor.noKeyDown}get pointerX(){return this.touchCursor.end.x}get pointerY(){return this.touchCursor.end.y}get pointer(){return this.touchCursor.pointer}setPosition(q,z){if(this.x===q&&this.y===z)return this;return this.x=q,this.y=z,this.forceUpdateThumb(),this}set x(q){if(this.x===q){global;return}this.base.x=q,this.thumb.x=q}set y(q){if(this.y===q)return;this.base.y=q,this.thumb.y=q}get x(){return this.base.x}get y(){return this.base.y}setVisible(q){return this.visible=q,this}toggleVisible(){return this.visible=!this.visible,this}get visible(){return this.base.visible}set visible(q){this.base.visible=q,this.thumb.visible=q,this.enable=q}get enable(){return this.touchCursor.enable}set enable(q){this.touchCursor.setEnable(q)}setEnable(q){if(q===void 0)q=!0;return this.enable=q,this}toggleEnable(){return this.setEnable(!this.enable),this}setRadius(q){return this.radius=q,this}addBase(q,z){if(this.base)this.base.destroy();if(q===void 0)q=this.scene.add.circle(0,0,this.radius).setStrokeStyle(3,255);if(z===void 0)z={};return z.eventEmitter=this.getEventEmitter(),this.touchCursor=new J(q,z),this.base=q,this}addThumb(q){if(this.thumb)this.thumb.destroy();if(q===void 0)q=this.scene.add.circle(0,0,40).setStrokeStyle(3,65280);return this.thumb=q,this}setScrollFactor(q){return this.base.setScrollFactor(q),this.thumb.setScrollFactor(q),this}boot(){this.on("update",this.update,this)}update(){let q=this.touchCursor,z,B,H=q.dirMode;if(q.anyKeyDown)if(q.force>this.radius){const L=q.rotation;z=H!==0?Math.cos(L)*this.radius:0,B=H!==1?Math.sin(L)*this.radius:0}else z=H!==0?q.forceX:0,B=H!==1?q.forceY:0;else z=0,B=0;return this.thumb.x=this.base.x+z,this.thumb.y=this.base.y+B,this}forceUpdateThumb(){return this.touchCursor.forceUpdate(),this}}Object.assign(P.prototype,$);class E extends T.BasePlugin{constructor(q){super(q)}start(){this.game.events.on("destroy",this.destroy,this)}add(q,z){return new P(q,z)}addVectorToCursorKeys(q){return new I(void 0,q)}}function O(q,z,B){if(B===void 0)B={};else if(B===!0)B=N;switch(B.left=!1,B.right=!1,B.up=!1,B.down=!1,q=(q+360)%360,z){case 0:if(q<180)B.down=!0;else B.up=!0;break;case 1:if(q>90&&q<=270)B.left=!0;else B.right=!0;break;case 2:if(q>45&&q<=135)B.down=!0;else if(q>135&&q<=225)B.left=!0;else if(q>225&&q<=315)B.up=!0;else B.right=!0;break;case 3:if(q>22.5&&q<=67.5)B.down=!0,B.right=!0;else if(q>67.5&&q<=112.5)B.down=!0;else if(q>112.5&&q<=157.5)B.down=!0,B.left=!0;else if(q>157.5&&q<=202.5)B.left=!0;else if(q>202.5&&q<=247.5)B.left=!0,B.up=!0;else if(q>247.5&&q<=292.5)B.up=!0;else if(q>292.5&&q<=337.5)B.up=!0,B.right=!0;else B.right=!0;break}return B}function b(q,z,B){const H=q.camera;if(!H)return null;if(B===void 0)B={};else if(B===!0)B=G;if(H===z)B.x=q.worldX,B.y=q.worldY;else H.getWorldPoint(q.x,q.y,B);return B}export{E as VirtualJoyStickPlugin};
